name: 'Docker Push'

on:
  push:
    # Dependabot has no access to the secrets that this workflow requires. So we
    # skip running the workflow in branches that dependabot presumably created.
    branches-ignore:
      - 'dependabot/**'
    # Trigger this workflow for all new releases that create a Git tag.
    tags:
      - 'v*.*.*'

jobs:
  docker-push:
    permissions:
      contents: 'read'

    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Authorize Container Registry'
        uses: 'docker/login-action@v3.5.0'
        with:
          registry: '${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com'
          username: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          password: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'

      - name: 'Setup Build Environment'
        uses: 'docker/setup-buildx-action@v3.11.1'

      # We have to compute the image tag based on the kind of push that
      # triggered this workflow. Ordinary commits should cause a Docker image
      # tag to be pushed where the tag name is the commit sha of the push event.
      # On the other hand, Github releases create Git tags, and if a tag
      # creation event triggered this workflow, then we want the tag name to be
      # the semver like release tag in the format v0.1.0.
      - name: 'Compute Image Tag'
        id: image
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
          fi

      - name: 'Push Docker Image'
        uses: 'docker/build-push-action@v6.18.0'
        with:
          push: true
          tags: '${{ secrets.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.event.repository.name }}:${{ steps.image.outputs.tag }}'
          build-args: |
            SHA=${{ github.sha }}
            TAG=${{ github.ref_name }}
